openapi: 3.1.0
info:
  title: Gateway API
  description: API for processing payments through Fondy.
  version: 1.0.0
servers:
  - url: https://pay.fondy.eu/api
    description: Production server
paths:
  /checkout/url:
    post:
      tags:
      - Accept Payment
      operationId: accept-purchase-fondy-checkout
      summary: Accept Purchase (Fondy Checkout)
      description: |
        This endpoint enables merchants to accept payments through the [Fondy Checkout](https://fondy.io/gb/customisable-checkout/), a hosted payment page designed to streamline the purchase process. By using this endpoint, merchants can initiate a transaction where customers are redirected to a secure, Fondy-managed payment page.

        [Fondy Checkout](https://fondy.io/gb/customisable-checkout/) is a ready-to-use checkout solution optimised for mobile devices and crafted to provide a superior user experience, making the payment journey smooth and efficient. It simplifies compliance and security for merchants by handling sensitive payment processing tasks, including data encryption and fraud prevention measures. This allows merchants to focus on their business operations while delivering a quick, intuitive, and secure payment experience for customers.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptPurchaseRequest'
      responses:
        '200':
          $ref: '#/components/responses/ResponseInterim'
  /checkout/token:
    post:
      tags:
      - Accept Payment
      operationId: accept-purchase-payment-token
      summary: Accept Purchase (Payment Token)
      description: ""
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptPurchaseRequest'
      responses:
        '200':
          $ref: '#/components/responses/ResponseToken'
  /3dsecure_step1:
    post:
      summary: Enroll Card in 3DSecure Service
      operationId: enroll-card-3ds
      tags:
      - Accept Payment 3DS
      description: |
        This endpoint enables PCIDSS-compliant merchants to enroll a card in the 3DSecure service. By enrolling the card, the merchant initiates the 3DSecure verification process, adding an extra layer of authentication for online purchases. This service is only available to merchants who comply with PCI DSS (Payment Card Industry Data Security Standard) requirements.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreeDSecureStep1Request'
      responses:
        '200':
          description: "Card enrolled in 3DSecure service"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreeDSecureStep1Response'
  /3dsecure_step2:
    post:
      summary: Accept 3DSecure Payment
      operationId: accept-3ds-payment
      tags:
      - Accept Payment 3DS
      description: |
        This endpoint is used to complete the 3DSecure payment process. Merchants should send the parameters received in the response from Step 1, along with additional required information, to finalize the 3DSecure enrollment with Fondy.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreeDSecureStep2Request'
      responses:
        '200':
          description: "3DSecure payment completed successfully."
          $ref: '#/components/responses/ResponseWithoutInterim'
  /status/order_id:
    post:
      summary: Check Order Status
      operationId: check-order-status
      tags:
      - Orders
      description: |
        This endpoint allows merchants to check the current status of an order through a host-to-host request. 
        The request can be made in JSON, XML, or HTML FORM format, and the response will be returned in the same format as the request. 
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckStatusRequest'
      responses:
        '200':
          description: "Order status response in the requested format (JSON, XML, or HTML FORM)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptPurchaseFinalResponse'
  /reverse/order_id:
    post:
      summary: Order Reversal
      operationId: order-reversal
      tags:
      - Orders
      description: |
        This endpoint allows merchants to reverse an order by sending a host-to-host request. 
        The request can be made in JSON, XML, or HTML FORM format, and the response will be returned in the same format.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderReversalRequest'
      responses:
        '200':
          description: "Order reversal response in the requested format (JSON, XML, or HTML FORM)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderReversalResponse'
  /transaction_list/:
    post:
      summary: Transaction List by Order
      operationId: transaction-list-by-order
      tags:
      - Orders
      description: |
        Retrieves a list of transactions for a specified order ID. The request must include the `merchant_id`, `order_id`, and `signature` parameters to verify the request's authenticity.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionListRequest'
      responses:
        '200':
          description: "List of transactions for the specified order."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionListResponse'
  /recurring:
    post:
      summary: Recurring payment
      operationId: recurring-payment
      tags: 
      - Recurring Payment
      description: |
        This endpoint enables merchants to process recurring payments using a previously stored card token. By including the rectoken parameter, representing the customer's stored payment token, merchants can initiate repeat transactions without requiring additional card details from the customer.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardTokenPurchaseRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CardTokenPurchaseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CardTokenPurchaseRequest'
      responses:
        '200':
          $ref: '#/components/responses/ResponseWithoutInterim'
  /subscription/:
    post:
      summary: Start/Stop a Subscription
      operationId: manage-subscription
      tags:
        - Subscription
      description: |
        This endpoint allows merchants to start or stop a subscription for an order. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionManagementRequest'
            example:
              request:
                merchant_id: 1480995
                order_id: "testpaymenttoken12"
                action: "stop"
                signature: "209b6e718d9c976784fff9adc88c0e9b45fcca6c"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionManagementResponse'
              examples:
                success:
                  summary: Successful Stop Response
                  value:
                    response:
                      response_status: "success"
                      status: "Subscription stopped successfully"
                error:
                  summary: Error Response
                  value:
                    response:
                      response_status: "failure"
                      error_message: "Invalid signature"
                      error_code: "2032"
  /checkout/redirect/:
    post:
      summary: Card Verification
      operationId: card-verification
      tags:
      - Card
      description: |
        This endpoint is used for card verification requests, which are generated by the merchant. The host-to-host request can be sent in HTML FORM, XML, or JSON format, and the response is always returned in the same content type as the request.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardVerificationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CardVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CardVerificationRequest'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/ResponseWithoutInterim'
  /p2pcredit:
    post:
      tags:
        - Card
      summary: P2P Card Credit
      operationId: p2p-card-credit
      description: |
        This endpoint allows a merchant to perform a peer-to-peer (P2P) card credit transaction, transferring funds directly to a recipient's card number or a stored receiver token. The request must include either `receiver_card_number` or `receiver_rectoken`, along with transaction details such as `order_id`, `order_desc`, and `amount`.

        To secure this request, the merchant must generate a signature using their Credit private key specifically for `p2pcredit` operations.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/P2pCreditRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/P2pCreditRequest'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/P2pCreditRequest'
          required: true
      responses:
        '200':
          $ref: '#/components/responses/ResponseWithoutInterim'
  /capture/order_id:
    post:
      tags:
        - Capture Pre-Purchase
      summary: Capture Pre-Authorized Payment
      operationId: capture-pre-auth-payment
      description: |
        This endpoint allows a merchant to capture a previously pre-authorized amount on a card. The capture operation is the second stage in a two-stage payment scheme, where the initial amount was held during a pre-authorization request (`preauth = Y`). This capture can be a full or partial capture of the amount.

        > 📘 Note
        > This operation applies only to card payments. If capture is not completed, only a reversal of the full held amount is available.
      parameters:
        - $ref: '#/components/parameters/ContentType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapturePrePurchaseRequest'
      responses:
        '200':
          description: Successful Captured Payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapturePrePurchaseResponse'
              examples:
                success:
                  summary: Successful Response
                  value:
                    response:
                      order_id: "ORDER_12345678"
                      response_status: "success"
                      response_code: ""
                      capture_status: "captured"
                      response_description: ""
                      merchant_id: 1
                error:
                  summary: Error Response
                  value:
                    response:
                      response_status: failure
                      error_message: Order Not Found
                      error_code: "1018"
components:
  parameters:
    ContentType:
      in: header
      name: Content-Type
      required: true
      schema:
        type: string
        enum:
          - application/json
          - application/xml
          - application/x-www-form-urlencoded
      description: Specifies the format for the request. Response will be in the same format.
  schemas:
    Currency:
      type: string
      description: Currency for the transaction (e.g., EUR, USD, GBP). Refer to the [Currencies](https://docs.fondy.eu/en/docs/page/27/) page for a full list of available currencies.
      maxLength: 3
      enum:
        - AED  # U.A.E. Dirham
        - AFN  # Afghanistan Afghani
        - ALL  # Albanian LEK
        - AMD  # Armenian Dram
        - ANG  # Netherlands Antillia
        - AOA  # Angola Kwanza
        - ARS  # Argentine Peso
        - AUD  # Australian Dollar
        - AWG  # Aruban Guilder
        - AZN  # Azerbaijanian Manat
        - BAM  # Bosnian Conv. Mark
        - BBD  # Barbados Dollar
        - BDT  # Taka
        - BGN  # Bulgarian Lev
        - BHD  # Bahraini Dinar
        - BIF  # Burundi Franc
        - BMD  # Bermudan Dollar
        - BND  # Brunei Dollar
        - BOB  # Bolivian Peso
        - BRL  # Brazilian Real
        - BSD  # Bahamian Dollar
        - BTN  # Ngultrum
        - BWP  # Pula
        - BZD  # Belize Dollar
        - CAD  # Canadian Dollar
        - CDF  # Franc Congolais
        - CHF  # Swiss Franc
        - CLP  # Chilean Peso
        - CNY  # Yuan Renminbi
        - COP  # Colombian Peso
        - CRC  # Costa Rican Colon
        - CUP  # Cuban Peso
        - CVE  # Cape Verde Escudo
        - CZK  # Czech Koruna
        - DJF  # Djibouti Franc
        - DKK  # Danish Krone
        - DOP  # Dominican Peso
        - DZD  # Algerian Dinar
        - EGP  # Egyptian Pound
        - ERN  # Eritrean Nakfa
        - ETB  # Ethiopian Birr
        - EUR  # Euro
        - FJD  # Fiji Dollar
        - FKP  # Falkland Islands
        - GBP  # Pound Sterling
        - GEL  # Georgian Lari
        - GHS  # Ghana Cedi
        - GIP  # Gibraltar Pound
        - GMD  # Dalasi
        - GNF  # Syli
        - GTQ  # Quetzal
        - GYD  # Guyana Dollar
        - HKD  # Hong Kong Dollar
        - HNL  # Lempira
        - HRK  # Croatian Kuna
        - HTG  # Gourde
        - HUF  # Hungarian Forint
        - IDR  # Rupiah
        - ILS  # Israel Shekel
        - INR  # Indian Rupee
        - IQD  # Iraqi Dinar
        - IRR  # Iranian Rial
        - ISK  # Iceland Krona
        - JMD  # Jamaican Dollar
        - JOD  # Jordanian Dinar
        - JPY  # Japanese Yen
        - KES  # Kenyan Shilling
        - KGS  # Kyrgyzstan Som
        - KHR  # Riel
        - KMF  # Comoros Franc
        - KRW  # Korean Won
        - KWD  # Kuwaiti Dinar
        - KYD  # Cayman Island Dollar
        - KZT  # Tenge
        - LAK  # Kip
        - LBP  # Lebanese Pound
        - LKR  # Sri Lanka Rupee
        - LRD  # Liberian Dollar
        - LSL  # Lesotho Loti
        - LTL  # Lithuanian Litas
        - LVL  # Latvian Lat
        - LYD  # Libyan Dinar
        - MAD  # Moroccan Dirham
        - MDL  # Moldovan Leu
        - MGA  # Malagasy Ariary
        - MKD  # Macedonian Denar
        - MMK  # Kyat
        - MNT  # Tugrik
        - MOP  # Pataca
        - MUR  # Mauritius Rupee
        - MVR  # Maldivian Rupee
        - MWK  # Malawi Kwacha
        - MXN  # Mexican Peso
        - MYR  # Malaysian Ringgit
        - MZN  # Mozambique Metical
        - NAD  # Namibia Dollar
        - NGN  # Naira
        - NIO  # Cordoba
        - NOK  # Norwegian Krone
        - NPR  # Nepalese Rupee
        - NZD  # New Zealand Dollar
        - OMR  # Omani Rial
        - PAB  # Balboa
        - PEN  # Peruvian Sol
        - PGK  # Kina
        - PHP  # Philippine Peso
        - PKR  # Pakistani Rupee
        - PLN  # Polish Zloty
        - PYG  # Guarani
        - QAR  # Qatari Rial
        - RON  # New Romanian Leu
        - RSD  # Serbian Dinar
        - RWF  # Rwanda Franc
        - SAR  # Saudi Riyal
        - SBD  # Solomon Islands Dollar
        - SCR  # Seychelles Rupee
        - SDG  # Sudanese Pound
        - SEK  # Swedish Krona
        - SGD  # Singapore Dollar
        - SHP  # St. Helena Pound
        - SLL  # Leone
        - SOS  # Somali Shilling
        - SRD  # Surinamese Dollar
        - STD  # Dobra
        - SVC  # Salvadoran Colon
        - SZL  # Lilangeni
        - THB  # Thai Baht
        - TJS  # Tajik Somoni
        - TMT  # Turkmenistan Manat
        - TND  # Tunisian Dinar
        - TOP  # Paʻanga
        - TRY  # Turkish Lira
        - TTD  # Trinidad and Tobago Dollar
        - TWD  # New Taiwan Dollar
        - TZS  # Tanzanian Shilling
        - UAH  # Hryvnia
        - UGX  # Ugandan Shilling
        - USD  # United States Dollar
        - UYU  # Uruguayan Peso
        - UZS  # Uzbekistani Som
        - VEF  # Venezuelan Bolívar
        - VND  # Vietnamese Dong
        - VUV  # Vatu
        - WST  # Samoan Tala
        - XAF  # CFA Franc BEAC
        - XCD  # East Caribbean Dollar
        - XOF  # CFA Franc BCEAO
        - XPF  # CFP Franc
        - YER  # Yemeni Rial
        - ZAR  # South African Rand
        - ZMW  # Zambian Kwacha
        - ZWD  # Zimbabwean Dollar
    Language:
      type: string
      maxLength: 2
      description: Specifies the main language displayed to users during the payment process. Refer to the [Language Support](https://docs.fondy.eu/en/docs/page/checkout-language/) page for more details.
      enum:
        - az  # Azərbaycan dili
        - cs  # Čeština
        - da  # Dansk
        - de  # Deutsch
        - en  # English
        - es  # Español
        - fi  # Suomi
        - fr  # Français
        - hu  # Magyar
        - it  # Italiano
        - ka  # ქართული
        - ko  # 한국어
        - lv  # Latviešu valoda
        - nl  # Nederlands
        - pl  # Język polski
        - ro  # Română
        - ru  # Русский
        - sk  # Slovenčina
        - uk  # Українська
        - zh  # 中文
      x-enumDescriptions:
        az: "Azərbaycan dili"
        cs: "Čeština"
        da: "Dansk"
        de: "Deutsch"
        en: "English"
        es: "Español"
        fi: "Suomi"
        fr: "Français"
        hu: "Magyar"
        it: "Italiano"
        ka: "ქართული"
        ko: "한국어"
        lv: "Latviešu valoda"
        nl: "Nederlands"
        pl: "Język polski"
        ro: "Română"
        ru: "Русский"
        sk: "Slovenčina"
        uk: "Українська"
        zh: "中文"
      example: "en"
    Verification:
      type: string
      maxLength: 1
      description: Indicates whether Fondy should automatically reverse the payment after a successful approval, primarily used for card verification. Refer to the [Verification](/) guide for more information.
      enum:
        - Y  # Auto-reverse order
        - N  # Do not auto-reverse order
      x-enumDescriptions:
        Y: A temporary charge will be made and then immediately reversed to verify the card.
        N: No automatic reversal. The payment will proceed as usual.
      default: N
    Preauth:
      type: string
      maxLength: 1
      description: "Preauthorization parameter for Visa/MasterCard payments to determine the timing of the charge."
      enum:
        - Y  # Hold amount
        - N  # Immediate debit
      x-enumDescriptions:
        Y: The amount is held on the customer’s card and not charged until the merchant sends a **capture** request to confirm. Capture the payment with the [Capture Pre-authorized Payment](ref:capture-pre-auth-payment) endpoint.
        N: The amount is debited from the customer’s card immediately and settled to the merchant account, in accordance with settlement rules.
      default: N
    ServerCallbackUrl:
      type: string
      maxLength: 2048
      description: URL for server-to-server callback post payment. See [Receiving Callbacks](https://docs.fondy.eu/en/docs/page/28/) for more details on callbacks.
      example: "http://site.com/callbackurl"
    Signature:
      type: string
      maxLength: 40
      description: |
        Signature for request verification, generated according to Fondy’s algorithm. Required to verify merchant request consistency and authenticity.
        Learn how to use Fondy’s algorithm at the [Signature Generation for Request and Response](https://docs.fondy.eu/en/docs/page/3/#chapter-3-5) page.
      example: "1773cf135bd89656131134b98637894dad42f808"
    OrderId:
      type: string
      description: A unique identifier for the order. This can be any value defined by the merchant, allowing you to use any internal order identification system your business employs.
      example: "ORDER_12345678"
    SenderEmail:
      type: string
      maxLength: 254
      description: Your customer's email address. Fondy will send an email regarding the payment to this address.
    MerchantData:
      type: string
      maxLength: 2048
      description: Custom data provided by the merchant in the request. You can include any arbitrary string data relevant to your business needs, such as user IDs, session information, or notes. The data must be in string format and must not contain the '|' (pipe) character.
    MerchantId:
      type: integer
      maxLength: 12
      description: A unique identifier assigned to the merchant by Fondy upon account registration. This ID is required for authenticating requests and associating transactions with the merchant's account.
      example: 1
    ErrorResponse:
      type: object
      properties:
        response:
          type: object
          properties:
            response_status:
              type: string
              description: "Status indicating failure."
              example: "failure"
            error_message:
              type: string
              description: "Description of the error encountered."
              example: "General decline"
            error_code:
              type: integer
              description: "Error code for the failure."
              example: 1000
    AcceptPurchaseReqData:
      type: object
      required:
        - order_id
        - merchant_id
        - order_desc
        - signature
        - amount
        - currency
      properties:
        order_id:
          $ref: '#/components/schemas/OrderId'
        merchant_id:
          $ref: '#/components/schemas/MerchantId'
        order_desc:
          type: string
          maxLength: 1024
          description: "A brief description of the order, encoded in UTF-8. This description will appear in payment records and can provide details for customer reference."
          example: "Hotel booking №1234 Antalya Resort"
        signature:
          $ref: '#/components/schemas/Signature'
        amount:
          type: integer
          maxLength: 12
          description: Total order amount in minor currency units (e.g., cents). For example, 1020 in EUR represents 10 euros and 20 cents. Separators or decimal points aren't allowed.
          example: 1020
        currency:
          $ref: '#/components/schemas/Currency'
        version:
          type: string
          maxLength: 10
          default: "1.0.1"
          description: Specifies the protocol version. Use version '1.0.1' to ensure that the `additional_info` parameter is included in the callback response.
          example: "1.0.1"
        response_url:
          type: string
          maxLength: 2048
          description: "The URL where the customer is redirected after completing the payment. Typically used to display the transaction status or next steps."
          example: "http://site.com/responseurl"
        server_callback_url:
          $ref: '#/components/schemas/ServerCallbackUrl'
        payment_systems:
          type: string
          maxLength: 1024
          description: |
            A list of allowed payment systems for processing this order, separated by commas or semicolons. If not specified, the default allowed payment systems set in the Fondy merchant portal will be used.

            Supported Values:

            | Payment system code | Description             |
            |---------------------|-------------------------|
            | `card`              | Visa/MasterCard/Maestro |
            | `banklinks_pl`      | Polland bank links      |
            | `banklinks_eu`      | European countries bank links |
            | `installments`      | Installments            |
          example: "card,banklinks_eu"
        default_payment_system:
          type: string
          maxLength: 25
          description: "Specifies the preferred payment system to be displayed first to the customer. Supported values match those available in the `payment_systems` parameter."
          example: "card"
        lifetime:
          type: integer
          maxLength: 9
          description: "The duration for which the order is valid, in seconds. Default is 36000 seconds (10 hours), with a maximum of 69120000 seconds (8 days)."
          default: 36000
          example: 600
        merchant_data:
          $ref: '#/components/schemas/MerchantData'
        preauth:
          $ref: '#/components/schemas/Preauth'
        sender_email:
          $ref: '#/components/schemas/SenderEmail'
        descriptor:
          type: string
          maxLength: 21
          description: "Dynamic descriptor appearing on the customer's bank statement to indicate transaction details."
        delayed:
          type: string
          maxLength: 1
          description: "Flag controlling the behavior of delayed payments, which impacts retry attempts if the initial payment fails."
          enum:
            - Y  # Allows multiple attempts within the lifetime period
            - N  # Only one payment attempt allowed
          x-enumDescriptions:
            Y: "Allows the customer to pay the order within the period specified in the `lifetime` parameter. Multiple host-to-host callbacks and browser redirects may occur if the previous attempt failed."
            N: "If the payment is declined, the customer will be redirected to recreate the order. Only one callback will be sent to `server_callback_url`."
          default: Y
        lang:
          $ref: '#/components/schemas/Language'
        product_id:
          type: string
          maxLength: 1024
          description: "Unique identifier assigned by the merchant for the product or service being purchased."
        required_rectoken:
          type: string
          maxLength: 1
          description: "Indicates if a card token should be generated by Fondy to facilitate recurring payments without cardholder re-entry. Set to 'Y' to request a card token for future payments. Refer to the [Recurring Payments](ref:recurring-payment) documentation for more details."
          enum:
            - Y  # Return card token
            - N  # Do not return card token
          x-enumDescriptions:
            Y: "Fondy will return a card token for accessing card funds without cardholder interaction."
            N: "No card token will be returned."
          default: N
        verification:
          $ref: '#/components/schemas/Verification'
        # verification_type:
        #   type: string
        #   maxLength: 25
        #   description: "Defines the type of card verification applied to the order."
        #   enum:
        #     - amount  # Hold amount on card
        #     - code    # Hold amount and require code entry
        #   x-enumDescriptions:
        #     amount: "The amount submitted by the merchant will be held on the card."
        #     code: "The amount will be held on the card, and the cardholder must enter a 4-character code to pass verification."
        #   default: amount
        rectoken:
          type: string
          maxLength: 40
          description: "A reusable token generated by Fondy to facilitate card payments without cardholder re-entry for future transactions."
          example: "544d3f86237886b6404d8b000f6a7d71c45410b7"
        receiver_rectoken:
          type: string
          maxLength: 40
          description: "Token used for crediting funds to a card without requiring the full card number. Primarily for use cases where the cardholder is a recipient."
        design_id:
          type: integer
          maxLength: 6
          description: "The unique identifier for a custom checkout page design as configured in the Fondy merchant portal."
          example: 123
        subscription:
          type: string
          maxLength: 1
          description: "Enables or disables scheduled (recurring) payments for this order. Set to 'Y' to activate scheduled payments for a subscription service, or 'N' to process a one-time payment."
          enum:
            - Y  # Enable scheduled payments
            - N  # Disable scheduled payments
          x-enumDescriptions:
            Y: Enables scheduled (recurring) payments for the order. The customer will be charged periodically based on the defined schedule.
            N: Disables scheduled payments for the order. The payment will be processed as a one-time transaction.
          default: N
        subscription_callback_url:
          type: string
          maxLength: 2048
          description: "The URL for server callbacks triggered after each scheduled (recurring) payment is processed."
          example: http://site.com/subscriptioncallback
        recurring_data:
          type: string
          format: byte
          description: |
            A Base64-encoded JSON string that configures the details of a recurring payment plan. When decoded, the JSON object specifies the schedule, amount, and start/end times for the recurring payments. 

            **Decoded JSON Structure:**
            ```json
            {
              "every": 1,
              "period": "month",
              "amount": 10000,
              "start_time": "2024-04-26",
              "end_time": "2025-04-26"
            }
            ```

            - **`every`** *(integer)*: Interval between payments. Defaults to `1` if not provided. Example: `1` represents one period (e.g., one month if `period` is "month").
            - **`period`** *(string)*: Unit of time for the payment interval. Defaults to `"month"` if not specified.
              - Accepted Values: `"day"`, `"week"`, `"month"`, `"year"`.
            - **`amount`** *(integer)*: Payment amount in minor currency units (e.g., cents). Example: `10000` represents $100.00 for currencies with two decimal places.
            - **`start_time`** *(string)*: Start date for the recurring payments in ISO 8601 format (e.g., `"2024-04-26"`). Defaults to the current date or the calculated start date if not provided.
            - **`end_time`** *(string)*: End date for the recurring payments in ISO 8601 format. Defaults to the system-defined end date if not provided.
          example: eyJldmVyeSI6MSwicGVyaW9kIjoibW9udGgiLCJhbW91bnQiOjEwMDAwLCJzdGFydF90aW1lIjoiMjAyNC0wNC0yNiJ9
    AcceptPurchaseRequest:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/AcceptPurchaseReqData'
    AcceptPurchaseFinalResponse:
      type: object
      properties:
        response:
          type: object
          description: Parameters of the final response
          properties:
            order_id:
              $ref: '#/components/schemas/OrderId'
            merchant_id:
              $ref: '#/components/schemas/MerchantId'
            amount:
              type: integer
              maxLength: 12
              description: "Order amount in cents without separator."
            currency:
              $ref: '#/components/schemas/Currency'
            order_status:
              type: string
              maxLength: 50
              description: "Order processing status indicating the current state of the transaction."
              enum:
                - created       # Order created, awaiting payment details
                - processing    # Order processing by payment gateway
                - declined      # Order declined by Fondy, bank, or external system
                - approved      # Order completed, funds held and soon credited
                - expired       # Order lifetime expired
                - reversed      # Approved transaction was fully reversed
              x-enumDescriptions:
                created: "Order has been created, but the customer has not entered payment details yet; the merchant should continue to request the status of the order."
                processing: "Order is still processing by the payment gateway; the merchant should continue to request the status of the order."
                declined: "Order is declined by Fondy, a bank, or an external payment system."
                approved: "Order completed successfully, funds are held on the payer’s account and soon will be credited to the merchant; the merchant can provide the service or ship goods."
                expired: "Order lifetime expired."
                reversed: "Previously approved transaction was fully reversed. In this case, the `reversal_amount` will equal `actual_amount`."
            response_status:
              type: string
              maxLength: 50
              description: "Request processing status (e.g., 'success' or 'failure')."
            signature:
              type: string
              maxLength: 40
              description: "Order signature for request verification."
            tran_type:
              type: string
              maxLength: 50
              enum: ["purchase", "verification", "p2p credit", "p2p transfer", "settlement", "reverse"]
            sender_cell_phone:
              type: string
              maxLength: 16
              description: "Customer's mobile phone number."
            sender_account:
              type: string
              maxLength: 50
              description: "Customer payment account."
            masked_card:
              type: string
              maxLength: 19
              description: "Masked card number."
            card_bin:
              type: integer
              maxLength: 6
              description: "First 6 digits of the card number."
            card_type:
              type: string
              maxLength: 50
              enum: ["VISA", "MasterCard"]
            rrn:
              type: string
              maxLength: 50
              description: "Bank transaction ID, often not unique."
            approval_code:
              type: string
              maxLength: 6
              description: "Authorization code returned by the bank."
            response_code:
              type: integer
              maxLength: 4
              description: "Order decline response code."
            response_description:
              type: string
              maxLength: 1024
              description: "Description of the response code."
            reversal_amount:
              type: integer
              maxLength: 12
              description: "Total reversal amount for the current order."
            settlement_amount:
              type: integer
              maxLength: 12
              description: "Settlement amount for the current order."
            settlement_currency:
              $ref: '#/components/schemas/Currency'
            order_time:
              type: string
              format: date-time
              description: "Order creation date in DD.MM.YYYY hh:mm:ss format."
            settlement_date:
              type: string
              format: date
              description: "Settlement date in DD.MM.YYYY format."
            eci:
              type: integer
              maxLength: 2
              description: "Ecommerce Indicator for 3DSecure authentication status."
              enum: [5, 6, 7]
            fee:
              type: integer
              maxLength: 12
              description: "Fee charged by Fondy."
            payment_system:
              type: string
              maxLength: 50
              description: "Payment system used for the transaction."
            sender_email:
              $ref: '#/components/schemas/SenderEmail'
            payment_id:
              type: integer
              maxLength: 19
              description: "Unique payment ID generated by Fondy."
            actual_amount:
              type: integer
              maxLength: 12
              description: "Actual amount held or charged from the card."
            actual_currency:
              $ref: '#/components/schemas/Currency'
            product_id:
              type: string
              maxLength: 1024
              description: "Merchant's product or service ID."
            merchant_data:
              $ref: '#/components/schemas/MerchantData'
            verification_status:
              type: string
              maxLength: 50
              description: "Code verification result."
              enum: ["verified", "incorrect", "failed", "created"]
            rectoken:
              type: string
              maxLength: 40
              description: "Token for accessing card funds without cardholder interaction."
            rectoken_lifetime:
              type: string
              format: date-time
              description: "Token expiration date in DD.MM.YYYY hh:mm:ss format."
            additional_info:
              type: object
              description: "Additional information in JSON format."
              properties:
                bank_name:
                  type: string
                  description: "Bank name."
                bank_country:
                  type: string
                  description: "Bank country."
                bank_response_code:
                  type: string
                  description: "Response code from the bank."
                card_product:
                  type: string
                  description: "Type of card product."
                card_category:
                  type: string
                  description: "Category of the card."
                settlement_fee:
                  type: number
                  description: "Settlement fee."
                capture_status:
                  type: string
                  description: "Status of the capture."
                client_fee:
                  type: number
                  description: "Fee charged to the client."
                ipaddress_v4:
                  type: string
                  description: "IP address in IPv4 format."
                capture_amount:
                  type: integer
                  description: "Amount captured."
                card_type:
                  type: string
                  enum: ["VISA", "MasterCard"]
                  description: "Type of the card used."
                reservation_data:
                  type: string
                  description: "Reservation data."
                bank_response_description:
                  type: string
                  description: "Description of the bank's response."
                transaction_id:
                  type: integer
                  description: "Transaction ID from the bank."
                timeend:
                  type: string
                  format: date-time
                  description: "End time for the transaction."
                card_number:
                  type: string
                  description: "Card number used."
                payment_method:
                  type: string
                  enum: ["apple", "googlepay", "card"]
                  description: "Payment method used."
    AcceptPurchaseInterimResponse:
      type: object
      properties:
        response:
          type: object
          properties:
            response_status:
              type: string
              example: "success"
            checkout_url:
              type: string
              format: uri
              example: "https://pay.fondy.eu/checkout?token=e0a5d4f331806d1e2feb80353b4c44bf6751fc8c"
            payment_id:
              type: integer
              example: 123456789012345
    ThreeDSecureStep1Request:
      type: object
      properties:
        request:
          type: object
          required:
          - order_id
          - merchant_id
          - order_desc
          - signature
          - amount
          - currency
          - card_number
          - cvv2
          - expiry_date
          - client_ip
          properties:
            order_id:
              $ref: '#/components/schemas/OrderId'
            merchant_id:
              $ref: '#/components/schemas/MerchantId'
            order_desc:
              type: string
              maxLength: 1024
              description: "Detailed description of the order in UTF-8 encoding, viewable by the customer and included in payment records."
              example: "Hotel booking №1234 Antalia Resort"
            signature:
              $ref: '#/components/schemas/Signature'
            amount:
              type: integer
              maxLength: 12
              description: "Total amount for the order, specified in minor units (e.g., cents), without decimal separators. For example, 1020 represents 10.20 in the currency’s base unit."
              example: 1020
            currency:
              $ref: '#/components/schemas/Currency'
            card_number:
              type: string
              maxLength: 19
              description: "The customer’s Visa or MasterCard number used for the transaction."
            cvv2:
              type: string
              maxLength: 4
              description: "The card’s CVV2 or CVC2 security code, typically found on the back of the card."
            expiry_date:
              type: string
              pattern: "^(0[1-9]|1[0-2])([0-9]{2})$"
              description: "The card’s expiry date in MMYY format, where MM is the month and YY is the year."
            client_ip:
              type: string
              maxLength: 15
              description: "The IP address of the client initiating the transaction, used for fraud prevention and security."
            version:
              type: string
              maxLength: 10
              description: "Specifies the API protocol version. Use version '1.0.1' for compatibility with additional information in callbacks."
              default: "1.0.1"
              example: "1.0.1"
            server_callback_url:
              $ref: '#/components/schemas/ServerCallbackUrl'
            lifetime:
              type: integer
              maxLength: 6
              description: "The lifetime of the order in seconds, defining how long the order remains valid. Defaults to 600 seconds, with a maximum of 69120000 seconds (8 days)."
              default: 600
              example: 600
            merchant_data:
              $ref: '#/components/schemas/MerchantData'
            preauth:
              $ref: '#/components/schemas/Preauth'
            sender_email:
              $ref: '#/components/schemas/SenderEmail'
            descriptor:
              type: string
              maxLength: 21
              description: "Dynamic transaction descriptor that appears on the customer’s bank statement to indicate transaction details."
            lang:
              $ref: '#/components/schemas/Language'
            product_id:
              type: string
              maxLength: 1024
              description: "Merchant-specific product or service identifier associated with the order."
            verification:
              $ref: '#/components/schemas/Verification'
            container:
              type: string
              description: "Google or Apple Pay encrypted data in BASE64 format for secure card information transmission."
              example: "ewogICJhcGlWZXJzaW9uTWlub3IiOiAwLAogICJhcGlWZXJzaW9uIjogMiw..."
    ThreeDSecureStep1Response:
      type: object
      properties:
        response:
          type: object
          properties:
            response_status:
              type: string
              maxLength: 50
              description: "If no error occurred, this field always returns 'success'."
              example: "success"
            acs_url:
              type: string
              maxLength: 2048
              description: "URL of the cardholder's issuing bank's Access Control Server, where the customer must enter the 3DSecure password."
              example: "https://pay.fondy.eu/checkout?token=e0a5d4f331806d1e2feb80353b4c44bf6751fc8c"
            pareq:
              type: string
              maxLength: 20480
              description: "Parameter which must be submitted to `acs_url`."
            md:
              type: string
              maxLength: 1024
              description: "Unique 3DSecure request ID generated by Fondy payment gateway."
          example:
            response_status: "success"
            acs_url: "https://pay.fondy.eu/checkout?token=e0a5d4f331806d1e2feb80353b4c44bf6751fc8c"
            pareq: "PaReq_content_here"
            md: "unique_3dsecure_request_id"
    ThreeDSecureStep2Request:
      type: object
      properties:
        request:
          type: object
          required:
          - order_id
          - merchant_id
          - pareq
          - md
          - signature
          properties:
            order_id:
              $ref: '#/components/schemas/OrderId'
            merchant_id:
              $ref: '#/components/schemas/MerchantId'
            pareq:
              type: string
              maxLength: 20480
              description: "The Payer Authentication Request (PaReq) parameter returned by the issuing bank to the specified URL after successful password verification. Required for completing the 3D Secure authentication flow."
            md:
              type: string
              maxLength: 1024
              description: "A unique 3DSecure request ID generated by Fondy, used to track the transaction through the 3D Secure process."
            version:
              type: string
              maxLength: 10
              description: "The protocol version used for 3D Secure communication. Set to '1.0' by default to ensure compatibility."
              default: "1.0"
              example: "1.0"
            signature:
              $ref: '#/components/schemas/Signature'
          example:
            order_id: "ID1234"
            merchant_id: 1
            pareq: "PaReq_content_from_bank"
            md: "unique_3dsecure_request_id"
            version: "1.0"
            signature: "1773cf135bd89656131134b98637894dad42f808"
    CheckStatusRequest:
      type: object
      properties:
        request:
          type: object
          required:
            - order_id
            - merchant_id
            - signature
          properties:
            order_id:
              $ref: '#/components/schemas/OrderId'
            merchant_id:
              $ref: '#/components/schemas/MerchantId'
            signature:
              $ref: '#/components/schemas/Signature'
            version:
              type: string
              maxLength: 10
              description: "Specifies the protocol version for the request. Default is '1.0' to maintain compatibility with the current API structure."
              example: "1.0"
    OrderReversalRequest:
      type: object
      properties:
        request:
          type: object
          required:
            - order_id
            - merchant_id
            - signature
            - amount
            - currency
          properties:
            order_id:
              $ref: '#/components/schemas/OrderId'
            merchant_id:
              $ref: '#/components/schemas/MerchantId'
            signature:
              $ref: '#/components/schemas/Signature'
            version:
              type: string
              maxLength: 10
              description: "Specifies the protocol version to use for the reversal request. Default is '1.0' for compatibility with the current API structure."
              example: "1.0"
            amount:
              type: integer
              maxLength: 12
              description: >
                The total amount to be reversed, specified in minor currency units (e.g., cents). For example, 1020 in EUR represents 10 euros and 20 cents. Separators or decimal points aren't allowed.
              example: 1020
            currency:
              $ref: '#/components/schemas/Currency'
            comment:
              type: string
              maxLength: 1024
              description: A comment provided by the merchant to explain the reason for the reversal. The comment must be in UTF-8 format and should describe the context of the reversal.
              example: "Customer returned product back."
    OrderReversalResponse:
      type: object
      properties:
        response:
          type: object
          properties:
            order_id:
              $ref: '#/components/schemas/OrderId'
            merchant_id:
              $ref: '#/components/schemas/MerchantId'
            revers_status:
              type: string
              maxLength: 50
              description: >
                The status of the reversal processing. Indicates whether the reversal 
                request has been successfully created, declined, or approved.
              enum: 
                - created   # Reversal request has been initiated.
                - declined  # Reversal request has been declined.
                - approved  # Reversal request has been approved.
              example: "approved"
            response_status:
              type: string
              maxLength: 50
              description: >
                The status of the request processing. Returns `'success'` if the request 
                validation passes, or `'failure'` if there are errors in the request.
              example: "success"
            signature:
              $ref: '#/components/schemas/Signature'
            response_code:
              type: integer
              maxLength: 4
              description: >
                A numeric code representing the response outcome. If the request fails, 
                this field provides a decline code indicating the specific error.
              example: 1008
            response_description:
              type: string
              maxLength: 1024
              description: >
                A detailed description of the response, especially in the case of a decline. 
                Explains the reason for the failure or any additional details about the request outcome.
              example: "Parameter `amount` is mandatory."
    TransactionListRequest:
      type: object
      properties:
        request:
          type: object
          properties:
            merchant_id:
              $ref: '#/components/schemas/MerchantId'
            order_id:
              $ref: '#/components/schemas/OrderId'
            signature:
              $ref: '#/components/schemas/Signature'
          required:
            - merchant_id
            - order_id
            - signature
    TransactionListResponse:
      type: object
      properties:
        response:
          type: array
          description: "List of transactions for the specified order."
          items:
            type: object
            properties:
              verification_code:
                type: string
                nullable: true
                description: "The verification code associated with the transaction, if applicable. Null if no verification code is used."
                example: null
              masked_card:
                type: string
                description: "Partially masked card number used in the transaction, hiding sensitive digits."
                example: "408093XXXXXX8221"
              protocol:
                type: string
                description: "Protocol used for processing the transaction, such as 'safe_charge'."
                example: "safe_charge"
              pares_status:
                type: string
                nullable: true
                description: "3D Secure Pares status returned by the issuing bank, if applicable. Null if not used."
                example: null
              sender_country:
                type: string
                description: "Country of the sender based on card or transaction details."
                example: "US"
              istest:
                type: string
                description: "Indicates whether the transaction is a test ('Y' for yes, 'N' for no)."
                example: "N"
              timestart:
                type: string
                format: date-time
                description: "Timestamp indicating when the transaction started."
                example: "2017-02-17T13:50:32Z"
              currency:
                type: string
                description: "Currency in which the transaction was processed, specified in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217)."
                example: "USD"
              preauth:
                type: string
                description: "Indicates whether the transaction was preauthorized ('Y' for yes, 'N' for no)."
                example: "N"
              transaction_status:
                type: string
                description: "Current status of the transaction, such as 'approved' or 'declined'."
                example: "declined"
              duration:
                type: integer
                description: "Duration of the transaction processing in seconds."
                example: 953
              ip_country:
                type: string
                description: "Country derived from the sender's IP address."
                example: "US"
              settlement_amount:
                type: integer
                description: "Amount settled for the transaction in minor currency units (e.g., cents)."
                example: 0
              timeend:
                type: string
                format: date-time
                description: "Timestamp indicating when the transaction ended."
                example: "2017-02-17T13:50:33Z"
              order_id:
                $ref: '#/components/schemas/OrderId'
              actual_amount:
                type: number
                description: "The actual amount involved in the transaction, in major currency units (e.g., dollars)."
                example: 33.7
              ipaddress_v4:
                type: string
                description: "IPv4 address of the sender initiating the transaction."
                example: "45.56.154.162"
              expire_year:
                type: string
                description: "Expiration year of the payment card used for the transaction."
                example: "2019"
              actual_currency:
                type: string
                description: "Actual currency used for the transaction, specified in ISO 4217 format."
                example: "USD"
              tran_type:
                type: string
                description: "Type of transaction, such as 'purchase' or 'refund'."
                example: "purchase"
              payment_system:
                type: string
                description: "Payment system used to process the transaction, such as 'card' or 'paypal'."
                example: "card"
              merchant_id:
                $ref: '#/components/schemas/MerchantId'
              response_description:
                type: string
                description: "A detailed description of the transaction response or error, if applicable."
                example: "General decline"
              payment_id:
                type: integer
                description: "Unique identifier assigned to the payment transaction."
                example: 37877547
              card_type:
                type: string
                description: "Type of card used for the transaction, such as 'VISA' or 'MASTERCARD'."
                example: "VISA"
              amount:
                type: number
                description: "Total transaction amount in major currency units (e.g., dollars)."
                example: 33.7
              sender_email:
                $ref: '#/components/schemas/SenderEmail'
              response_code:
                type: integer
                description: "Numeric response code indicating the outcome of the transaction."
                example: 1000
    CardTokenPurchaseRequest:
      type: object
      properties:
        request:
          allOf:
            - $ref: '#/components/schemas/AcceptPurchaseReqData'
            - type: object
              required:
                - rectoken
    CardVerificationRequest:
      type: object
      properties:
        request:
          allOf:
            - $ref: '#/components/schemas/AcceptPurchaseReqData'
            - type: object
              required:
                - verification
    P2pCreditRequest:
      type: object
      properties:
        request:
          allOf:
            - $ref: '#/components/schemas/AcceptPurchaseReqData'
            - type: object
              required:
                - receiver_card_number
                - receiver_rectoken
    CapturePrePurchaseRequest:
      type: object
      properties:
        request:
          type: object
          properties:
            order_id:
              $ref: '#/components/schemas/OrderId'
            merchant_id:
              $ref: '#/components/schemas/MerchantId'
            signature:
              $ref: '#/components/schemas/Signature'
            version:
              type: string
              description: "Specifies the protocol version for the request. Defaults to '1.0'."
              default: "1.0"
            amount:
              type: integer
              description: |
                The amount to capture for the transaction, specified in the smallest unit of the currency (e.g., cents for USD). For example, `1020` represents $10.20.
              example: 1020
            currency:
              $ref: '#/components/schemas/Currency'
          required:
            - order_id
            - merchant_id
            - signature
            - amount
            - currency
    CapturePrePurchaseResponse:
      type: object
      properties:
        response:
          type: object
          properties:
            order_id:
              $ref: '#/components/schemas/OrderId'
            response_status:
              type: string
              description: The processing status of the capture request. Returns `success` if all request parameters pass validation, or other values if issues occur.
              example: "success"
            response_code:
              type: string
              description: A code indicating the status of the response. Empty if no issues occur, or contains a specific code for declined or failed captures.
              example: ""
            capture_status:
              type: string
              description: The processing status of the capture. Indicates whether the capture was successfully completed (`captured`) or declined (`declined`).
              example: "captured"
            response_description:
              type: string
              description: A message providing additional details about the response. Useful for explaining the reason for declines or other issues, if applicable.
              example: ""
            merchant_id:
              $ref: '#/components/schemas/MerchantId'
    SubscriptionManagementRequest:
      type: object
      properties:
        request:
          type: object
          required:
            - merchant_id
            - order_id
            - action
            - signature
          properties:
            merchant_id:
              $ref: '#/components/schemas/MerchantId'
            order_id:
              $ref: '#/components/schemas/OrderId'
            action:
              type: string
              description: Specifies the action to perform on the subscription. Use `start` to resume a subscription, enabling scheduled payments, or `stop` to cancel the subscription, preventing future payments.
              enum:
                - start
                - stop
              x-enumDescriptions:
                start: "Start the subscription, resuming scheduled payments."
                stop: "Stop the subscription, halting any future scheduled payments."
              example: "stop"
            signature:
              $ref: '#/components/schemas/Signature'
    SubscriptionManagementResponse:
      type: object
      properties:
        response:
          type: object
          properties:
            response_status:
              type: string
              description: Indicates whether the request was processed successfully or failed validation. Returns `success` if the action was completed successfully, otherwise `failure`.
              enum:
                - success
                - failure
              example: "success"
            status:
              type: string
              description: Provides a descriptive message about the outcome of the action, such as confirming the subscription was stopped or started successfully.
              example: "Subscription stopped successfully"
            error_message:
              type: string
              nullable: true
              description: Detailed description of the error, explaining why the request failed. This field is only populated when `response_status` is `failure`.
              example: "Invalid signature"
            error_code:
              type: integer
              nullable: true
              description: Numeric code representing the specific error that occurred. This field is only populated when `response_status` is `failure`.
              example: 2032
    TokenResponse:
      type: object
      properties:
        response:
          type: object
          properties:
            token:
              type: string
              example: "9f0124be2b72333fb0e809f82c8f7e4eaeb6ec6e"
            response_status:
              type: string
              example: "success"
  responses:
    ResponseInterim:
      description: The response for a successful transaction.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcceptPurchaseInterimResponse'
          examples:
            interim:
              summary: "Success Response"
              value:
                response:
                  response_status: "success"
                  checkout_url: "https://pay.fondy.eu/checkout?token=e0a5d4f331806d1e2feb80353b4c44bf6751fc8c"
                  payment_id: 123456789012345
            error:
                summary: "Error Response"
                value:
                  response:
                    response_status: failure
                    error_message: General decline
                    error_code: "1000"
    ResponseWithInterim:
      description: The response for a successful transaction.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcceptPurchaseFinalResponse'
          examples:
            final:
              summary: "Final Response"
              value:
                response:
                  order_id: "ID1234"
                  merchant_id: 1
                  amount: 1020
                  currency: "EUR"
                  order_status: "approved"
                  response_status: "success"
                  signature: "1773cf135bd89656131134b98637894dad42f808"
                  tran_type: "purchase"
                  sender_cell_phone: "+1234567890"
                  sender_account: "customer_account"
                  masked_card: "444444XXXXXX5555"
                  card_bin: 444444
                  card_type: "VISA"
                  rrn: "123456789"
                  approval_code: "654321"
                  response_code: 100
                  response_description: "Transaction approved"
                  reversal_amount: 0
                  settlement_amount: 1020
                  settlement_currency: "EUR"
                  order_time: "21.12.2014 11:21:30"
                  settlement_date: "21.12.2014"
                  eci: 5
                  fee: 10
                  payment_system: "card"
                  sender_email: "customer@example.com"
                  payment_id: 123456789012345
                  actual_amount: 1020
                  actual_currency: "EUR"
                  product_id: "hotel_booking_1234"
                  merchant_data: "custom_data"
                  verification_status: "verified"
                  rectoken: "da39a3ee5e6b4b0d3255bfef95601890afd80709"
                  rectoken_lifetime: "01.01.2018 00:00:00"
                  additional_info:
                    bank_name: "Some bank in US country"
                    bank_country: "US"
                    bank_response_code: "decln_1000"
                    card_product: "DEBIT"
                    card_category: "CLASSIC"
                    settlement_fee: 0.2
                    capture_status: "captured"
                    client_fee: 0.3
                    ipaddress_v4: "8.8.8.8"
                    capture_amount: 200
                    card_type: "VISA"
                    reservation_data: null
                    bank_response_description: "General decline"
                    transaction_id: 1058755083
                    timeend: "10.01.2018 11:21:30"
                    card_number: "4444555566661111"
                    payment_method: "apple"
            interim:
              summary: "Interim Response"
              value:
                response:
                  response_status: "success"
                  checkout_url: "https://pay.fondy.eu/checkout?token=e0a5d4f331806d1e2feb80353b4c44bf6751fc8c"
                  payment_id: 123456789012345
            error:
                summary: "Error Response"
                value:
                  response:
                    response_status: failure
                    error_message: General decline
                    error_code: "1000"
    ResponseWithoutInterim:
      description: The response for a successful transaction.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcceptPurchaseFinalResponse'
          examples:
            final:
              summary: "Final Response"
              value:
                response:
                  order_id: "ID1234"
                  merchant_id: 1
                  amount: 1020
                  currency: "EUR"
                  order_status: "approved"
                  response_status: "success"
                  signature: "1773cf135bd89656131134b98637894dad42f808"
                  tran_type: "purchase"
                  sender_cell_phone: "+1234567890"
                  sender_account: "customer_account"
                  masked_card: "444444XXXXXX5555"
                  card_bin: 444444
                  card_type: "VISA"
                  rrn: "123456789"
                  approval_code: "654321"
                  response_code: 100
                  response_description: "Transaction approved"
                  reversal_amount: 0
                  settlement_amount: 1020
                  settlement_currency: "EUR"
                  order_time: "21.12.2014 11:21:30"
                  settlement_date: "21.12.2014"
                  eci: 5
                  fee: 10
                  payment_system: "card"
                  sender_email: "customer@example.com"
                  payment_id: 123456789012345
                  actual_amount: 1020
                  actual_currency: "EUR"
                  product_id: "hotel_booking_1234"
                  merchant_data: "custom_data"
                  verification_status: "verified"
                  rectoken: "da39a3ee5e6b4b0d3255bfef95601890afd80709"
                  rectoken_lifetime: "01.01.2018 00:00:00"
                  additional_info:
                    bank_name: "Some bank in US country"
                    bank_country: "US"
                    bank_response_code: "decln_1000"
                    card_product: "DEBIT"
                    card_category: "CLASSIC"
                    settlement_fee: 0.2
                    capture_status: "captured"
                    client_fee: 0.3
                    ipaddress_v4: "8.8.8.8"
                    capture_amount: 200
                    card_type: "VISA"
                    reservation_data: null
                    bank_response_description: "General decline"
                    transaction_id: 1058755083
                    timeend: "10.01.2018 11:21:30"
                    card_number: "4444555566661111"
                    payment_method: "apple"
            error:
              summary: "Error Response"
              value:
                response:
                  response_status: failure
                  error_message: General decline
                  error_code: "1000"
    ResponseToken:
      description: The response for a successful request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenResponse'
          examples:
            success:
              summary: "Success Response"
              value:
                response:
                  token: "9f0124be2b72333fb0e809f82c8f7e4eaeb6ec6e"
                  response_status: "success"
            error:
              summary: "Error Response"
              value:
                response:
                  response_status: failure
                  error_message: Parameter `amount` is mandatory
                  error_code: "1008"